<!--相对位置相关的节点在此-->
<launch>
  <arg name="mav_name" default="hummingbird"/>
  <arg name="feature_type" default="orb"/>
  <arg name="is_leader" default="false" />
  <arg name="index" default="0"/>
  <arg name="other_index" default="1"/>

  <!--通过接收两副图像，来确定相对位置，接受的参数是：拓扑结构，自身节点的消息-->
  <node name="$(arg feature_type)_main" pkg="sift" type="$(arg feature_type)" output="screen">
    <!--载入拓扑结构数据-->
    <param name="uav_index" value="$(arg index)"/>
    <param name="other_index" value="$(arg other_index)"/>
    <rosparam command="load" file="$(find rotors_utils)/params/topology.yaml" />
  </node>

  <!--产生在L2中看F2的目标轨迹, 但是这个是F2产生的，问问老板改不改吧-->
  <node name="follower_pose" pkg="rotors_utils" type="follower_pose" output="screen" unless="$(arg is_leader)" >
    <param name="relative_pose" value="relative_pose$(arg index)$(arg other_index)" />
    <param name="is_leader" value="$(arg is_leader)" />
  </node>

  <!--follower节点的期望值计算节点-->
  <node name="trajectory_generation" pkg="rotors_utils" type="trajectory_generation" output="screen" if="$(arg is_leader)">
    <param name="my_id" value="$(arg index)"/>
    <param name="follower_id" value="$(arg other_index)"/>
    <param name="T_L2_F2" value="relative_pose$(arg index)$(arg other_index)"/>
    <param name="T_LS_L2" value="svo/fusion_pose"/>
    <param name="T_FS_F2" value="/$(arg mav_name)$(arg other_index)/svo/fusion_pose"/>
    <param name="T_L2_dF2" value="/$(arg mav_name)$(arg other_index)/leader_desired_pose"/>
    <param name="T_FW_dF2" value="target_pose"/>
  </node>

</launch>